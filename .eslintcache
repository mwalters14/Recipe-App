[{"C:\\Users\\mwalt\\Documents\\Projects\\React-Recipe-App\\my-app\\src\\index.js":"1","C:\\Users\\mwalt\\Documents\\Projects\\React-Recipe-App\\my-app\\src\\App.js":"2","C:\\Users\\mwalt\\Documents\\Projects\\React-Recipe-App\\my-app\\src\\reportWebVitals.js":"3","C:\\Users\\mwalt\\Documents\\Projects\\React-Recipe-App\\my-app\\src\\Recipe.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":2572,"mtime":1609358312338,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":665,"mtime":1609358084866,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1gmk4mm",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mwalt\\Documents\\Projects\\React-Recipe-App\\my-app\\src\\index.js",[],["20","21"],"C:\\Users\\mwalt\\Documents\\Projects\\React-Recipe-App\\my-app\\src\\App.js",["22"],"import React, { useState, useEffect } from \"react\";\nimport Recipe from \"./Recipe\";\nimport \"./App.css\";\n\nfunction App() {\n  const APP_ID = \"831b3738\";\n  const APP_KEY = \"3dcdb327919fcba4fde08cb6bd58e67f\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('chicken');\n  /*\n      useState is a hook from react\n\n      What is a hook?\n      A hook is a special function that let's you 'hook' into react freatures\n\n      useState sets the initial state (value) of our variable\n  */\n  \n  /*\n    useEffect\n\n    Code block executes on first render\n    [] - Prevents effect from executing anytime the page rerenders\n    [counter] - Effect will run when [counter] state is changed\n  */\n  useEffect(() => {\n    getReceipes();\n  }, [query]);\n\n  /*\n    Synchronous programming model - Things happen one at a time\n    Asynchronous model means multiple things can happen at the same time\n      When you call an event the program continues to run \n      When the event is finished the program is informed an accessess the result\n\n    await - Requesting data from an API from a third party can take time\n      Await waits for the api to return a response before executing\n\n    fetch - Provides a generic request and response object (things involved with network request)\n      fetch expects a promise\n      fetch won't reject http error status\n      fetch can recieve cross-site cookies\n      fetch won't sent cookies\n  */\n  const getReceipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n    const data = await response.json();\n    setRecipes(data.hits);\n    console.log(data.hits);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  }\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  }\n  return (\n    <div className=\"App\">\n      <form onSubmit={getSearch} className=\"search-form\">\n        <input className=\"search-bar\" type=\"text\"\n          value={search} \n          onChange={updateSearch}\n        />\n        <button className=\"search-button\" type=\"submit\">\n          Search\n        </button>\n      </form>\n      <div className=\"recipes\">\n      {recipes.map(recipe => (\n        <Recipe\n          key={\"\"}\n          title={recipe.recipe.label} \n          calories={recipe.recipe.calories}\n          image={recipe.recipe.image}\n          ingredients={recipe.recipe.ingredients}\n        />\n      ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\mwalt\\Documents\\Projects\\React-Recipe-App\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\mwalt\\Documents\\Projects\\React-Recipe-App\\my-app\\src\\Recipe.js",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":30,"column":6,"nodeType":"29","endLine":30,"endColumn":13,"suggestions":"30"},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getReceipes'. Either include it or remove the dependency array.","ArrayExpression",["33"],"no-global-assign","no-unsafe-negation",{"desc":"34","fix":"35"},"Update the dependencies array to be: [getReceipes, query]",{"range":"36","text":"37"},[797,804],"[getReceipes, query]"]